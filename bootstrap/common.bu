variant: fcos
version: 1.5.0

storage:
  files:
    # Use (future) FleetLock service to orchestrate reboots
    - path: /etc/zincati/config.d/55-update-strategy.toml
      contents:
        inline: |
          [updates]
          strategy = "fleet_lock"
          [updates.fleet_lock]
          base_url = "${fleetlock_url}"

    # K3s-common RPM repo
    - path: /etc/yum.repos.d/rancher-k3s-common.repo
      mode: 0644
      contents:
        inline: |
          [rancher-k3s-common-stable]
          name=Rancher K3s Common (stable)
          baseurl=https://rpm.rancher.io/k3s/stable/common/centos/8/noarch
          enabled=1
          gpgcheck=1
          repo_gpgcheck=0
          gpgkey=https://rpm.rancher.io/public.key

    # Install K3s
    - path: /usr/local/bin/k3s
      mode: 0755
      contents:
        source: 'https://github.com/k3s-io/k3s/releases/download/v1.28.2%2Bk3s1/k3s-arm64'
        verification:
          hash: sha256-4b0c00032ee92d6e27f623c99c990d5fa1295352b2dc88f1c6f7ea24be091779

    # Kubelet config
    - path: /etc/rancher/k3s/kubelet.config
      mode: 0644
      contents:
        inline: |
          apiVersion: kubelet.config.k8s.io/v1beta1
          kind: KubeletConfiguration
          shutdownGracePeriod: 60s
          shutdownGracePeriodCriticalPods: 10s

    # Registry config
    - path: /etc/rancher/k3s/registries.yaml
      mode: 0644
      contents:
        inline: |
          ${indent(10, registry_config)}

systemd:
  units:
    # Install K3s deps
    - name: rpm-ostree-install-k3s-deps.service
      enabled: true
      contents: |
        [Unit]
        Description=Install k3s dependencies
        Wants=network-online.target
        After=network-online.target
        Before=zincati.service
        Before=k3s.service
        ConditionPathExists=|!/usr/share/selinux/packages/k3s.pp

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=rpm-ostree install --apply-live --allow-inactive --assumeyes k3s-selinux

        [Install]
        WantedBy=multi-user.target
